<?xml version="1.0" encoding="UTF-8"?>
<!-- scan：程序运行时配置文件被修改，是否重新加载。true=重新加载；false=不重新加载；默认为true; -->
<!-- scanPeriod：监测配置文件被修改的时间间隔，scan属性必须设置为true才可生效；默认为1分钟，默认单位是毫秒； -->
<!-- debug：是否打印logback程序运行的日志信息。true=打印；false=不打印；默认为false; -->
<configuration scan="true" scanPeriod="60" debug="false">
    <!--日志文件主目录-->
    <property name="LOG_HOME" value="D:/tmp/log"/>
    <!--日志格式-->
    <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
    <property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%X{requestId}] %-5level %logger{50} %line - %msg%n"/>
    <!--日志文件名称 spring.application.name表示工程名称-->
    <property name="APP_NAME" value="app"/>

    <!-- 配置磁盘文件滚动输出日志 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--设置策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件路径：这里%d{yyyyMMdd}表示按天分类日志-->
            <FileNamePattern>${LOG_HOME}/%d{yyyyMMdd}/${APP_NAME}.%i.log</FileNamePattern>
            <!--设置日志保留天数-->
            <MaxHistory>15</MaxHistory>
            <!--设置最大日志大小-->
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>
        <!--设置日志输出格式-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!--控制台输出日志 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!-- 设置日志输出格式 -->
            <pattern>${pattern}</pattern>
            <!-- 设置输出字符集编码 -->
            <charset>UTF-8</charset>
        </encoder>
    </appender>

    <!-- 把日志异步输出到磁盘文件中，避免每次都进行磁盘IO操作 -->
    <appender name="ASYNC-FILE" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="FILE"/>
    </appender>

    <!--多环境配置 按照active profile选择分支-->
    <springProfile name="dev">
        <!--root节点 全局日志级别，用来指定最基础的日志输出级别-->
        <root level="DEBUG">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="ASYNC-FILE"/>
        </root>

        <!-- 子节点向上级传递 局部日志级别-->
        <!--        <logger level="WARN" name="org.springframework"/>-->
        <!--        <logger level="WARN" name="com.netflix"/>-->
        <!--        <logger level="DEBUG" name="org.hibernate.SQL"/>-->
    </springProfile>
    <springProfile name="prod">
        <root level="INFO">
            <appender-ref ref="ASYNC-FILE"/>
        </root>
    </springProfile>
</configuration>
